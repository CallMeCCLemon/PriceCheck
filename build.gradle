buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.12'
    }
}

plugins {
    id 'groovy'
    id 'java'
    id "com.google.protobuf" version "0.8.12"
}

group 'com.pricecheck'
version '0.1'

def grpcVersion = '1.8.0' // CURRENT_GRPC_VERSION
def nettyTcNativeVersion = '2.0.7.Final'

sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.1'
    implementation 'com.google.inject:guice:4.2.3'

    implementation 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testImplementation 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    // gRPC dependencies
    implementation "com.google.api.grpc:proto-google-common-protos:0.1.9"
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.netty:netty-tcnative-boringssl-static:${nettyTcNativeVersion}"
    implementation "org.bouncycastle:bcmail-jdk15:1.46"
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"

    // Spock testing dependencies
    testImplementation('org.codehaus.groovy:groovy:3.0.7')
    testImplementation('org.spockframework:spock-core:2.0-M4-groovy-3.0')
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.4.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

apply plugin: 'idea'
apply plugin: 'application'

startScripts.enabled = false

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}